name: RDP over ngrok

on: [workflow_dispatch]

jobs:
  rdp:
    runs-on: windows-latest

    steps:
      - name: üîΩ Download & Auth ngrok
        run: |
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath .
          .\ngrok.exe authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"
        shell: pwsh

      - name: üßë‚Äçüíª Enable RDP and Add User
        run: |
          net user kamel123 MyStrong123 /add
          net localgroup administrators kamel123 /add
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        shell: pwsh

      - name: üöÄ Start ngrok in foreground (block execution)
        shell: pwsh
        run: |
          Start-Job -ScriptBlock {
            & ".\ngrok.exe" tcp 3389
          } | Out-Null

          Start-Sleep -Seconds 10

          $maxAttempts = 10
          $attempt = 0
          $found = $false
          while ($attempt -lt $maxAttempts -and -not $found) {
              try {
                  $response = Invoke-WebRequest -UseBasicParsing http://127.0.0.1:4040/api/tunnels
                  $json = $response.Content | ConvertFrom-Json
                  $publicUrl = $json.tunnels[0].public_url
                  Write-Host "üîó RDP Tunnel URL: $publicUrl"
                  $found = $true
              } catch {
                  Start-Sleep -Seconds 3
                  $attempt++
              }
          }

          if (-not $found) {
              Write-Error "‚ùå ngrok tunnel not found after multiple attempts."
              exit 1
          }

          Write-Host "üü¢ RDP is ready. Session will remain active for 6 hours."
          Start-Sleep -Seconds 21600  # 6 hours
