name: RDP over Ngrok (Stable)

on: [workflow_dispatch]

jobs:
  rdp:
    runs-on: windows-latest

    steps:
      - name: 🔽 Download & Auth ngrok + Enable RDP + Show URL
        shell: pwsh
        run: |
          # تحميل ngrok
          Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath .
          
          # تفعيل ngrok بالتوكن من GitHub Secrets
          .\ngrok.exe authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"

          # إعداد RDP
          net user kamel123 MyStrong123 /add
          net localgroup administrators kamel123 /add
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

          # تشغيل ngrok في المقدمة مع الالتقاط
          Start-Process -FilePath ".\ngrok.exe" -ArgumentList "tcp 3389" -WindowStyle Hidden
          Start-Sleep -Seconds 10

          # محاولة جلب رابط ngrok
          $found = $false
          for ($i = 0; $i -lt 10; $i++) {
              try {
                  $response = Invoke-WebRequest -UseBasicParsing http://127.0.0.1:4040/api/tunnels
                  $json = $response.Content | ConvertFrom-Json
                  $publicUrl = $json.tunnels[0].public_url
                  Write-Host "`n🔗 RDP Tunnel URL: $publicUrl`n"
                  $found = $true
                  break
              } catch {
                  Start-Sleep -Seconds 3
              }
          }

          if (-not $found) {
              Write-Error "❌ ngrok tunnel not found after multiple attempts."
              exit 1
          }

          Write-Host "🟢 RDP is ready. Session will remain active for 6 hours."
          Start-Sleep -Seconds 21600  # 6 ساعات
